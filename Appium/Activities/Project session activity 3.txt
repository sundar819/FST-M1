package package2;

import java.net.MalformedURLException;
import java.net.URL;
import java.time.Duration;
import java.util.HashMap;

import org.openqa.selenium.By;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Point;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.Assert;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.Test;

import io.appium.java_client.AppiumDriver;
import io.appium.java_client.MobileBy;
import io.appium.java_client.MobileElement;
import io.appium.java_client.PerformsTouchActions;
import io.appium.java_client.TouchAction;
import io.appium.java_client.android.AndroidDriver;
import io.appium.java_client.touch.WaitOptions;
import io.appium.java_client.touch.offset.PointOption;
import io.appium.java_client.TouchAction;

public class Chromeactivity1 {

	static // Declare Android driver
	AndroidDriver<MobileElement> driver;
	WebDriverWait wait;

	@BeforeClass
	public void setUp() throws MalformedURLException {
		// Set the Desired Capabilities
		DesiredCapabilities caps = new DesiredCapabilities();
		caps.setCapability("deviceName", "fc3e29dd1220");
		caps.setCapability("platformName", "Android");
		caps.setCapability("automationName", "UiAutomator2");
		caps.setCapability("appPackage", "com.android.chrome");
		caps.setCapability("appActivity", "com.google.android.apps.chrome.Main");
		caps.setCapability("noReset", true);

		// Instantiate Appium Driver
		URL appServer = new URL("http://127.0.0.1:4723/wd/hub");
		driver = new AndroidDriver<>(appServer, caps);
		wait = new WebDriverWait(driver, 20);
		driver.get("https://www.training-support.net/selenium");
	}

	@Test
	public void test1() throws InterruptedException {
		  String text="To-Do List";
	        String uiSelector = "new UiSelector().textMatches(\"" + text
                  + "\")";

String command = "new UiScrollable(new UiSelector().scrollable(true)).scrollIntoView("
                  + uiSelector + ");";

driver.findElementByAndroidUIAutomator(command);
				
		MobileElement todolist = driver.findElement(MobileBy.xpath("//android.view.View[@index='14']"));

		wait.until(ExpectedConditions.elementToBeClickable(todolist)).click();
		
		Thread.sleep(5000); 

		driver.findElement(MobileBy.xpath("//android.widget.EditText[@id='taskInput']")).sendKeys("Add tasks to list");

		driver.findElement(MobileBy.xpath("//android.widget.Button[@text='Add Task']")).click();

		Thread.sleep(5000);
		driver.findElement(MobileBy.id("taskInput")).sendKeys("Get number of tasks");

		driver.findElement(MobileBy.xpath("//android.widget.Button[@text='Add Task']")).click();

		Thread.sleep(3000);
		driver.findElement(MobileBy.id("taskInput")).sendKeys("Clear the list");

		driver.findElement(MobileBy.xpath("//android.widget.Button[@text='Add Task']")).click();

		Thread.sleep(3000);

		driver.findElement(MobileBy.xpath("//android.widget.TextView[@text='Add tasks to list']")).click();

		driver.findElement(MobileBy.xpath("//android.widget.TextView[@text='Get number of tasks']")).click();

		driver.findElement(MobileBy.xpath("//android.widget.TextView[@text='Clear the list']")).click();

		driver.findElement(MobileBy.xpath("//android.widget.TextView[@text='Clear List']")).click();

		MobileElement addmoretasks = driver.findElement(
				MobileBy.xpath("//android.widget.TextView[@text='	\r\n" + "Add more tasks to this list.']"));

		Assert.assertFalse(addmoretasks.isDisplayed());

		System.out.println("Test cases passed");
	}

}
